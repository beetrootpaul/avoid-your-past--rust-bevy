name: "build, test, lint"

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

# TODO: split into several jobs, so I can easily see which target/release fails

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/shared-steps-setup-prerequisites
      - name: "Test"
        run: cargo test --features bevy/x11 --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/shared-steps-setup-prerequisites
      - name: "Lint"
        run: cargo clippy --features bevy/x11 --all-targets -- -D warnings

  build_debug_desktop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/shared-steps-setup-prerequisites
      # --features bevy/x11: this job run on Linux, therefore require either X11 or Wayland to compile Bevy app properly
      - name: "Build"
        run: cargo build --features bevy/x11 --verbose

  build_debug_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/shared-steps-setup-prerequisites
      - name: "Build"
        run: cargo build  --target wasm32-unknown-unknown --verbose

  build_release_desktop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/shared-steps-setup-prerequisites
      # --features bevy/x11: this job run on Linux, therefore require either X11 or Wayland to compile Bevy app properly
      - name: "Build"
        run: RUSTFLAGS="-D warnings -A dead_code -A unused-imports -A unused_mut -A unused-variables" cargo build --release --features bevy/x11 --verbose

  build_release_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/shared-steps-setup-prerequisites
      - name: "Build"
        run: RUSTFLAGS="-D warnings -A dead_code -A unused-imports -A unused_mut -A unused-variables" cargo build --release --target wasm32-unknown-unknown --verbose
